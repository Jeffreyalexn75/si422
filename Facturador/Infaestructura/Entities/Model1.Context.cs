//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infaestructura.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class tamboEntities : DbContext
    {
        public tamboEntities()
            : base("name=tamboEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categorias> Categorias { get; set; }
        public virtual DbSet<DetalleVenta> DetalleVenta { get; set; }
        public virtual DbSet<Inventarios> Inventarios { get; set; }
        public virtual DbSet<Marcas> Marcas { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tiendas> Tiendas { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Producto_Inventario> Producto_Inventario { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_ELIMINARCATEGORIA(Nullable<int> cOD)
        {
            var cODParameter = cOD.HasValue ?
                new ObjectParameter("COD", cOD) :
                new ObjectParameter("COD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINARCATEGORIA", cODParameter);
        }
    
        public virtual int SP_ELIMINARMARCA(Nullable<int> cOD)
        {
            var cODParameter = cOD.HasValue ?
                new ObjectParameter("COD", cOD) :
                new ObjectParameter("COD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINARMARCA", cODParameter);
        }
    
        public virtual int SP_ELIMINARPRODUCTO(Nullable<int> cOD)
        {
            var cODParameter = cOD.HasValue ?
                new ObjectParameter("COD", cOD) :
                new ObjectParameter("COD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ELIMINARPRODUCTO", cODParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_CATEGORIAS_Result> SP_LISTAR_CATEGORIAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_CATEGORIAS_Result>("SP_LISTAR_CATEGORIAS");
        }
    
        public virtual ObjectResult<SP_LISTAR_DETALLE_INVENTARIO_Result> SP_LISTAR_DETALLE_INVENTARIO(Nullable<int> iDINVENTARIO)
        {
            var iDINVENTARIOParameter = iDINVENTARIO.HasValue ?
                new ObjectParameter("IDINVENTARIO", iDINVENTARIO) :
                new ObjectParameter("IDINVENTARIO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_DETALLE_INVENTARIO_Result>("SP_LISTAR_DETALLE_INVENTARIO", iDINVENTARIOParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_INVENTARIO_DIRECCION_Result> SP_LISTAR_INVENTARIO_DIRECCION(string dIRECCION)
        {
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_INVENTARIO_DIRECCION_Result>("SP_LISTAR_INVENTARIO_DIRECCION", dIRECCIONParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_INVENTARIOS_Result> SP_LISTAR_INVENTARIOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_INVENTARIOS_Result>("SP_LISTAR_INVENTARIOS");
        }
    
        public virtual ObjectResult<SP_LISTAR_MARCAS_Result> SP_LISTAR_MARCAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_MARCAS_Result>("SP_LISTAR_MARCAS");
        }
    
        public virtual ObjectResult<SP_LISTAR_PRODUCTO_INVENTARIO_Result> SP_LISTAR_PRODUCTO_INVENTARIO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_PRODUCTO_INVENTARIO_Result>("SP_LISTAR_PRODUCTO_INVENTARIO");
        }
    
        public virtual ObjectResult<SP_LISTAR_PRODUCTOS_Result> SP_LISTAR_PRODUCTOS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_PRODUCTOS_Result>("SP_LISTAR_PRODUCTOS");
        }
    
        public virtual ObjectResult<SP_LISTAR_PRODUCTOS_CATEGORIA_Result> SP_LISTAR_PRODUCTOS_CATEGORIA(Nullable<int> iD_CATEGORIA)
        {
            var iD_CATEGORIAParameter = iD_CATEGORIA.HasValue ?
                new ObjectParameter("ID_CATEGORIA", iD_CATEGORIA) :
                new ObjectParameter("ID_CATEGORIA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_PRODUCTOS_CATEGORIA_Result>("SP_LISTAR_PRODUCTOS_CATEGORIA", iD_CATEGORIAParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_PRODUCTOS_MARCA_Result> SP_LISTAR_PRODUCTOS_MARCA(Nullable<int> iD_MARCA)
        {
            var iD_MARCAParameter = iD_MARCA.HasValue ?
                new ObjectParameter("ID_MARCA", iD_MARCA) :
                new ObjectParameter("ID_MARCA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_PRODUCTOS_MARCA_Result>("SP_LISTAR_PRODUCTOS_MARCA", iD_MARCAParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_TIENDA_PRODUCTO_Result> SP_LISTAR_TIENDA_PRODUCTO(Nullable<int> iD_PRODUCTO)
        {
            var iD_PRODUCTOParameter = iD_PRODUCTO.HasValue ?
                new ObjectParameter("ID_PRODUCTO", iD_PRODUCTO) :
                new ObjectParameter("ID_PRODUCTO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_TIENDA_PRODUCTO_Result>("SP_LISTAR_TIENDA_PRODUCTO", iD_PRODUCTOParameter);
        }
    
        public virtual ObjectResult<SP_LISTAR_TIENDAS_Result> SP_LISTAR_TIENDAS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LISTAR_TIENDAS_Result>("SP_LISTAR_TIENDAS");
        }
    
        public virtual int SP_REGISTRAR_CATEGORIA(string nOMBRE)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_CATEGORIA", nOMBREParameter);
        }
    
        public virtual int SP_REGISTRAR_INVENTARIO(string dESCRIPCION)
        {
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_INVENTARIO", dESCRIPCIONParameter);
        }
    
        public virtual int SP_REGISTRAR_MARCA(string nOMBRE, string dESCRIPCION)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_MARCA", nOMBREParameter, dESCRIPCIONParameter);
        }
    
        public virtual int SP_REGISTRAR_PRODUCTO(Nullable<int> iD_MARCA, string nOMBRE, string dESCRIPCION, Nullable<double> pRECIO, Nullable<System.DateTime> fECHA_VENCIMIENTO, string cODIGO, Nullable<int> iD_CATEGORIA)
        {
            var iD_MARCAParameter = iD_MARCA.HasValue ?
                new ObjectParameter("ID_MARCA", iD_MARCA) :
                new ObjectParameter("ID_MARCA", typeof(int));
    
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var dESCRIPCIONParameter = dESCRIPCION != null ?
                new ObjectParameter("DESCRIPCION", dESCRIPCION) :
                new ObjectParameter("DESCRIPCION", typeof(string));
    
            var pRECIOParameter = pRECIO.HasValue ?
                new ObjectParameter("PRECIO", pRECIO) :
                new ObjectParameter("PRECIO", typeof(double));
    
            var fECHA_VENCIMIENTOParameter = fECHA_VENCIMIENTO.HasValue ?
                new ObjectParameter("FECHA_VENCIMIENTO", fECHA_VENCIMIENTO) :
                new ObjectParameter("FECHA_VENCIMIENTO", typeof(System.DateTime));
    
            var cODIGOParameter = cODIGO != null ?
                new ObjectParameter("CODIGO", cODIGO) :
                new ObjectParameter("CODIGO", typeof(string));
    
            var iD_CATEGORIAParameter = iD_CATEGORIA.HasValue ?
                new ObjectParameter("ID_CATEGORIA", iD_CATEGORIA) :
                new ObjectParameter("ID_CATEGORIA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_PRODUCTO", iD_MARCAParameter, nOMBREParameter, dESCRIPCIONParameter, pRECIOParameter, fECHA_VENCIMIENTOParameter, cODIGOParameter, iD_CATEGORIAParameter);
        }
    
        public virtual int SP_REGISTRAR_PRODUCTO_INVENTARIO(Nullable<int> iD_INVENTARIO, Nullable<int> iD_PRODUCTO, Nullable<int> sTOCK)
        {
            var iD_INVENTARIOParameter = iD_INVENTARIO.HasValue ?
                new ObjectParameter("ID_INVENTARIO", iD_INVENTARIO) :
                new ObjectParameter("ID_INVENTARIO", typeof(int));
    
            var iD_PRODUCTOParameter = iD_PRODUCTO.HasValue ?
                new ObjectParameter("ID_PRODUCTO", iD_PRODUCTO) :
                new ObjectParameter("ID_PRODUCTO", typeof(int));
    
            var sTOCKParameter = sTOCK.HasValue ?
                new ObjectParameter("STOCK", sTOCK) :
                new ObjectParameter("STOCK", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_PRODUCTO_INVENTARIO", iD_INVENTARIOParameter, iD_PRODUCTOParameter, sTOCKParameter);
        }
    
        public virtual int SP_REGISTRAR_TIENDA(string nOMBRE, string tELEFONO, string dIRECCION, Nullable<int> iD_INVENTARIO)
        {
            var nOMBREParameter = nOMBRE != null ?
                new ObjectParameter("NOMBRE", nOMBRE) :
                new ObjectParameter("NOMBRE", typeof(string));
    
            var tELEFONOParameter = tELEFONO != null ?
                new ObjectParameter("TELEFONO", tELEFONO) :
                new ObjectParameter("TELEFONO", typeof(string));
    
            var dIRECCIONParameter = dIRECCION != null ?
                new ObjectParameter("DIRECCION", dIRECCION) :
                new ObjectParameter("DIRECCION", typeof(string));
    
            var iD_INVENTARIOParameter = iD_INVENTARIO.HasValue ?
                new ObjectParameter("ID_INVENTARIO", iD_INVENTARIO) :
                new ObjectParameter("ID_INVENTARIO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_REGISTRAR_TIENDA", nOMBREParameter, tELEFONOParameter, dIRECCIONParameter, iD_INVENTARIOParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
